// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model DigitalMaturitySurveyResult {
  id              String    @id @default(uuid())
  country         String
  region          String    @default("")
  sector          String    @default("")
  overallScore    Float
  finalThoughts   String    @default("")
  criterionScores Json
  rawAnswers      Json
  createdAt       DateTime  @default(now())
  serviceScores   DigitalMaturitySurveyServiceScore[]
}

model GovernmentSurveyResult {
  id              String    @id @default(uuid())
  country         String
  region          String    @default("")
  overallScore    Float
  finalThoughts   String    @default("")
  criterionScores Json
  rawAnswers      Json
  createdAt       DateTime  @default(now())
  sectionScores   Json?
  serviceScores   GovernmentSurveyServiceScore[]
}

model GovernmentSurveyServiceScore {
  id              String   @id @default(uuid())
  resultId        String
  serviceCode     String
  overallScore    Float
  criterionScores Json
  createdAt       DateTime @default(now())

  result GovernmentSurveyResult @relation(fields: [resultId], references: [id], onDelete: Cascade)

  @@index([resultId])
}

model DigitalMaturitySurveyServiceScore {
  id              String   @id @default(uuid())
  resultId        String
  serviceCode     String
  overallScore    Float
  criterionScores Json
  createdAt       DateTime @default(now())

  result DigitalMaturitySurveyResult @relation(fields: [resultId], references: [id], onDelete: Cascade)

  @@index([resultId])
}